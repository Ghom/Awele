"""
File name: Controllers.py 
Description: This file describe the different controllers availlable to catch
the events comming from both the user and the CPU.
Author: Guillaume Paniagua
Creation date: 13/06/2017
"""

import pygame
from pygame.locals import *

from EventManager import *

from Global import Debug

#------------------------------------------------------------------------------
class MousseController:
    """ The mouse controller handle events coming from a mouse action and emmit 
    an event accordingly through the event manager
    """
    def __init__(self, event_manager):
        self.event_manager = event_manager
        self.event_manager.register_listener( self )
        
    #---------------------------------------------------------------------------
    def notify(self, event):
        if isinstance(event, TickEvent):
            for event in pygame.event.get():
                ev = None
                if event.type == QUIT:
                        ev = QuitEvent()
                        
                if event.type == MOUSEBUTTONUP: 
                    if event.button == 1:
                        ev = LeftClickEvent( event.pos )

                if ev:
                    self.event_manager.post( ev )
                    
#------------------------------------------------------------------------------
class KeyboardController:
        """KeyboardController takes Pygame events generated by the
        keyboard and uses them to control the model, by sending Requests
        or to control the Pygame display directly, as with the QuitEvent
        """
        def __init__(self, event_manager):
            self.event_manager = event_manager
            self.event_manager.register_listener( self )

    #----------------------------------------------------------------------
        def notify(self, event):
            if isinstance( event, TickEvent ):
                #Handle Input Events
                return

#------------------------------------------------------------------------------ 
class CPUSpinnerController:
        def __init__(self, event_manager):
            self.event_manager = event_manager
            self.event_manager.register_listener( self )

            self.clock = pygame.time.Clock()    
            self.keep_going = True
            
        #----------------------------------------------------------------------
        def run(self):
            while self.keep_going:
                self.clock.tick(30)
                event = TickEvent()
                self.event_manager.post(event)
            pygame.quit()

        #----------------------------------------------------------------------
        def notify(self, event):
            if isinstance(event, QuitEvent):
                self.keep_going = False
